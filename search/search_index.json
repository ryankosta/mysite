{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#home","title":"Home","text":"<p>Hello! I'm Ryan Kosta, a junior at UC San Diego, studying Computer Science.</p> <p>I conduct systems research with Associate Professor Yiying Zhang and Assistant Professor Amy Ousterhout, see Research page for more information.</p> <p>My research interests span Operating Systems, Datacenter Networks, and Computer Architecture.</p> <p>Always excited to discuss research with those in industry, academia, or who are interested!</p> <p>Definitely reach out: rkosta AT ucsd.edu</p>"},{"location":"#research","title":"Research","text":"<p>Posters</p> <ol> <li>Catena: A Scheduling System for Microsecond-Level Microservice DAGs. Ryan Kosta, Amy Ousterhout, Yiying Zhang (OSDI 23' Poster Session)</li> <li>Consolidating Network Resources with Rack-Level Network Pooling.  Will Lin, Ryan Kosta, Arvind Krishnamurthy, Yiying Zhang.   (OSDI 23' Poster Session)</li> </ol> <p>Papers</p> <ol> <li>SuperNIC: An FPGA-Based, Cloud-Oriented SmartNIC Yizhou Shan, Will Lin, Ryan Kosta, Arvind Krishnamurthy, Yiying Zhang   2024 ACM/SIGDA International Symposium on Field Programmable Gate Arrays (FPGA '24)</li> </ol> <p>For more information see research!</p>"},{"location":"#industry","title":"Industry","text":"2021-2022: Lead Computer Engineering intern at Education Technology Startup Haddee <ul> <li>Setup and maintain the an informational website and an educational management system </li> <li>Integrate features into the platform based on business needs </li> <li>Work with international development teams to coordinate development of a new platform </li> <li>Hire and manage a team of other interns doing similar work</li> </ul>"},{"location":"#volunteer","title":"Volunteer","text":"<ul> <li>2024-Ongoing: Chair of event planning for UCSD Graduate Women in Computing</li> <li>2023-2024: Co-chair of event planning and publicity for UCSD Graduate Women in Computing</li> <li>2023-2024: President of Origami Folders club at UCSD </li> <li>2022 : Session Chair for WORDS 22 </li> </ul>"},{"location":"#social","title":"Social","text":"<ul> <li>Google Scholar</li> <li>Github</li> <li>LinkedIn</li> </ul>"},{"location":"#skills","title":"Skills","text":"<ul> <li>Languages: C, Python, Bash, Verilog, Java, RISC-V Assembly, Scala</li> <li>Software: SpinalHDL, VPP, OVS, Discourse, Docker, Linux </li> </ul>"},{"location":"music/setup/","title":"Guitar setup","text":"<p>My silent vintage tube amp setup.</p>"},{"location":"music/setup/#guitars","title":"Guitars","text":"<ul> <li>1979 Fender Stratocaster (Natural wood)</li> <li>2019 Fender Stratocaster (Black) </li> <li>1999 Fender Stratocaster (Silverburst)</li> <li>Fender Telecaster Deluxe Reissue</li> </ul>"},{"location":"music/setup/#amps","title":"Amps","text":"<ul> <li>Vox AC15 reissue</li> <li>1980 Fender champ </li> <li>Blues junior special edition</li> <li>Fender Super Six head (twin reverb circuit)</li> </ul>"},{"location":"music/setup/#attenuator-setup","title":"Attenuator setup","text":"<p>I use the Torpedo Captor X (8 ohms) for attenuation and cabinet emulation.</p> <p>I have it connected to a cheap Neewer mixer board allowing me to use it in stereo (with individual channel control) and mixing in audio for my computer allowing me to play along with Jam Tracks. </p> <p>I use a Shiit Modi 2 to connect my computer with the mixer board. I use the mixer headphone out with Sennheiser HD598Cs</p>"},{"location":"music/shows/","title":"Shows","text":""},{"location":"music/shows/#previous-school-of-rock-shows","title":"Previous school of rock shows","text":""},{"location":"music/shows/#1968","title":"1968","text":"Song Original Artist Part Ball and Chain Big brother and the holding company Rythym Guitar Sympathy for the Devil Rolling Stones Rythym Guitar On the road again Canned Heat Rythym Guitar"},{"location":"music/shows/#ccr-vs-the-band","title":"C.C.R. V.S. The Band","text":"Song Original Artist Part Who'll stop the rain CCR Lead Guitar I heard it through the grapevine CCR Rythym Guitar"},{"location":"music/shows/#electric-light-orchestra","title":"Electric Light Orchestra","text":"Song Original Artist Part Strange Magic ELO Second guitar Don't bring me Down ELO Second guitar"},{"location":"music/shows/#southern-rock","title":"Southern Rock","text":"Song Original Artist Part La Grange ZZ Top Lead Guitar"},{"location":"music/shows/#led-zeppelin-2-vs-4","title":"Led Zeppelin 2 V.S. 4","text":"Song Original Artist Part Whole lotta love Zeppelin Rythym Guitar Living loving Maid Zeppelin Backup Vox Rock and Roll Zeppelin Lead Guitar"},{"location":"music/shows/#tommy","title":"Tommy","text":"Song Original Artist Part 1921 The Who Lead Guitar Cousin Kevin The Who Rythym Guitar Welcome The Who Rythym Guitar Tommy can you here me The Who Harmony Vox"},{"location":"music/shows/#british-invasion","title":"British Invasion","text":"Song Original Artist Part Other part Sympathy for the devil Rolling Stones Lead Guitar Lead vocals A little help from my friends Beatles Lead Guitar Lead vocals"},{"location":"music/shows/#90s-rock","title":"90s Rock","text":"Song Original Artist Part Other part Sweater Song Weezer Lead Guitar Are you gonna go my way Lenny Kravitz Lead Guitar Lead Vocals Man in the box Alice in Chains Lead Guitar Lead Vocals Possum Kingdom The Toadies Rythym Guitar In Bloom Nirvana Rythym Guitar"},{"location":"projects/cpus/","title":"CPUs","text":"<p>My CPU projects have been thus far designed simply to get me accustomed to learning digital design and Computer Architecture. </p> <p>My initial projects mostly use very low level constructs (such as gate level logic) that are great for learning but not as good for actual production code.</p> <p>I hope to design another CPU using SpinalHDL utilizing it's features for a more testible CPU with advanced design elements such as out of order execution and branch prediction. I'm really interested in designing a CPU with dissagregation in mind. </p>"},{"location":"projects/cpus/#r100","title":"R100","text":"<ul> <li>Risc-V</li> <li>Verilog</li> <li>Mostly gate level logic</li> <li>Non-pipelined</li> </ul> <p>This was my first cpu to learn simple logic design. I never tested it using full Risc-V tests rather I used smaller tests just to ensure basic functionality.</p>"},{"location":"projects/cpus/#r200","title":"R200","text":"<ul> <li>Partial redesign of r100 </li> <li>Verilog</li> <li>Pipelined </li> </ul> <p>This CPU adds pipelining. I planned on expanding it but I quickly realized the design limitations of the gate level logic used in R100. </p>"},{"location":"research/research/","title":"Research","text":"<p>I am currently researching at UC San Diego co-advised by Prof. Yiying Zhang (Wuklab) and Prof. Amy Ousterhout. </p> <p>In general, I am interested in innovating computer hardware and operating systems, and all that lies in between.</p>"},{"location":"research/research/#research-interests","title":"Research Interests","text":"<ul> <li>Operating Systems</li> <li>Datacenter Networks</li> <li>Computer Architecture </li> <li>File Systems </li> </ul>"},{"location":"research/research/#posters","title":"Posters","text":"<ol> <li>Catena: A Scheduling System for Microsecond-Level Microservice DAGs. Ryan Kosta, Amy Ousterhout, Yiying Zhang (OSDI 23' Poster Session)</li> <li>Consolidating Network Resources with Rack-Level Network Pooling. Will Lin, Ryan Kosta, Arvind Krishnamurthy, Yiying Zhang. (OSDI 23' Poster Session)</li> </ol>"},{"location":"research/research/#papers","title":"Papers","text":"<ol> <li>Disaggregating and Consolidating Network Functionalities with SuperNIC Yizhou Shan, Will Lin, Ryan Kosta, Arvind Krishnamurthy, Yiying Zhang arXiv:2109.07744 (arxiv 2021) </li> </ol>"},{"location":"selflearn/arch/","title":"Computer Architecture","text":"<p>Here are my reccomended resources for studying computer architecture</p>"},{"location":"selflearn/arch/#lectures","title":"Lectures","text":"<ul> <li>Onur Mutlu's classes</li> </ul>"},{"location":"selflearn/arch/#books","title":"Books","text":"Title Description Author Computer Archicture: A Quantitive Approach Describes advanced Computer Architecture concepts Patterson and Hennessey Computer Organization and Design RISC-V Edition A good introduction to computer ISAs Patterson and Hennesey"},{"location":"selflearn/arch/#tools","title":"Tools","text":""},{"location":"selflearn/arch/#testing-code-or-assembly-or-ab-testing","title":"Testing Code or Assembly or A/B Testing","text":"<ul> <li>Gnu Toolchain</li> <li>Qemu</li> <li>GDB </li> </ul>"},{"location":"selflearn/arch/#verilog-testing","title":"Verilog Testing","text":"<ul> <li>IVerilog (simple, great for starting out)</li> <li>Verilator</li> </ul>"},{"location":"selflearn/arch/#higher-level-rtl","title":"Higher level RTL","text":"<ul> <li>Spinalhdl</li> </ul>"},{"location":"selflearn/learn/","title":"Self Learning","text":"<p>I learned a lot of stuff on my own. Here is how I did it :)</p>"},{"location":"selflearn/linux/","title":"Linux","text":"<p>For linux you have to learn by doing. Using linux will give you a big edge up by giving you better access to many development tools for hardware and software.</p>"},{"location":"selflearn/linux/#great-starting-distributions","title":"Great starting distributions","text":"Title Benefits Based on Ubuntu Popular, easy Debian Fedora Good community, also easy Red Hat Pop OS Popular, good graphics support Ubuntu/Debian"},{"location":"selflearn/linux/#the-terminal","title":"The terminal","text":"<p>I am a big fan on a simplistic user interface and frequent use of the terminal but I know this is not for everyone. However, this approach will give you a leg up on working in terminal-only environments.</p>"},{"location":"selflearn/linux/#learn-the-terminal-via-exposure","title":"Learn the terminal via exposure","text":""},{"location":"selflearn/linux/#setup","title":"Setup","text":"<ul> <li>Install a simple Window Manager like i3</li> <li>Install a simplistic terminal based text editor like vim</li> </ul>"},{"location":"selflearn/linux/#doing","title":"Doing","text":"<ul> <li>Do all of your tasks such as file moving, coding, program installation, et cetera from the terminal</li> <li>If you get confused google how to do something (also use manpages) </li> </ul> <p>This is how I still go about all of my daily tasks and I find it rather easy. If you know the commands well typing commands can often be easier then a GUI</p>"},{"location":"selflearn/os/","title":"Operating System","text":""},{"location":"selflearn/os/#do-it-yourself","title":"Do it yourself","text":"<p>OSDev is by and far the best resource in this aspect. I reccomend building an understanding of ISAs before beginning in this project.</p>"},{"location":"selflearn/os/#which-isa-to-choose","title":"Which ISA to choose","text":"<p>Many people choose x86 as their first ISA as it has extensive documentation. This is a solid choice, however, I think Risc-V offers a compelling open source option thats fairly easy to work with.</p>"},{"location":"selflearn/os/#lecture-series","title":"Lecture Series","text":"<p>My favorite OS lecture series are by Prof. Geoffrey Challen. The assignments, sample exams, and lectures are all available at ops-class.</p>"},{"location":"selflearn/os/#working-with-risc-v-resources","title":"Working with Risc-V resources","text":"Title Description Author RISC-V OS Using Rust Good tutorial of how to work with Risc-v (in rust) Stephen Marz Xv6-RISCV Source Unix-v6 in RISC-V (also availaible in x86) See Authors on readme Xv6-RISCV Book Unix-v6 in RISC-V Book documentation Russ Cox, Frans Kaashoek, Robert Morris"},{"location":"selflearn/os/#learn-how-its-already-done","title":"Learn how its already done","text":"Title Description Author The design of the Unix Operating System Great to learn historical (simple + fundamental) OS design choices Maurice J. Bach Design and Implementation of the 4.4BSD Operating System Covers transition into more modern OS design Kirk McKusick, Keith Bostic, Mike Karels,John Quarterman Design and Implementation of the FreeBSD Operating System (2nd edition) Covers more modern OS design Kirk McKusick, George V. Neville-Neil, Robert Watson"},{"location":"selflearn/os/#tools","title":"Tools","text":"<ul> <li>Gnu toolchain (cross compiler version for target ISA) </li> <li>GDB</li> <li>Qemu</li> <li>Gnu Make </li> <li>Real hardware + jtag (or swd)</li> </ul>"}]}