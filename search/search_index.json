{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home Hello! I am Ryan Kosta. I am a current undergraduate at University of California San Diego, studying Computer Engineering. I do research in the CSE department with Prof. Yiying Zhang, see Research page for more information. Languages C Bash Python Verilog Scala (SpinalHDL) Software Linux Pandas Discourse Experience Industry I was the lead Computer Engineering intern at the education technology startup Haddee . This was a large role comprising many duties, including Setup and maintain the original haddee and class.haddee website Help integrate features into the haddee.com platform Work with international development teams to coordinate development of a new Haddee.com Hire and manage a team of other interns doing similar work","title":"Home"},{"location":"#home","text":"Hello! I am Ryan Kosta. I am a current undergraduate at University of California San Diego, studying Computer Engineering. I do research in the CSE department with Prof. Yiying Zhang, see Research page for more information.","title":"Home"},{"location":"#languages","text":"C Bash Python Verilog Scala (SpinalHDL)","title":"Languages"},{"location":"#software","text":"Linux Pandas Discourse","title":"Software"},{"location":"#experience","text":"","title":"Experience"},{"location":"#industry","text":"I was the lead Computer Engineering intern at the education technology startup Haddee . This was a large role comprising many duties, including Setup and maintain the original haddee and class.haddee website Help integrate features into the haddee.com platform Work with international development teams to coordinate development of a new Haddee.com Hire and manage a team of other interns doing similar work","title":"Industry"},{"location":"music/setup/","text":"Guitar setup My silent vintage tube amp setup. Guitars 1979 Fender Stratocaster (Natural wood) 2019 Fender Stratocaster (Black) 1999 Fender Stratocaster (Silverburst) Fender Telecaster Deluxe Reissue Amps Vox AC15 reissue 1980 Fender champ Blues junior special edition Fender Super Six head (twin reverb circuit) Attenuator setup I use the Torpedo Captor X (8 ohms) for attenuation and cabinet emulation. I have it connected to a cheap Neewer mixer board allowing me to use it in stereo (with individual channel control) and mixing in audio for my computer allowing me to play along with Jam Tracks. I use a Shiit Modi 2 to connect my computer with the mixer board. I use the mixer headphone out with Sennheiser HD598Cs","title":"Setup"},{"location":"music/setup/#guitar-setup","text":"My silent vintage tube amp setup.","title":"Guitar setup"},{"location":"music/setup/#guitars","text":"1979 Fender Stratocaster (Natural wood) 2019 Fender Stratocaster (Black) 1999 Fender Stratocaster (Silverburst) Fender Telecaster Deluxe Reissue","title":"Guitars"},{"location":"music/setup/#amps","text":"Vox AC15 reissue 1980 Fender champ Blues junior special edition Fender Super Six head (twin reverb circuit)","title":"Amps"},{"location":"music/setup/#attenuator-setup","text":"I use the Torpedo Captor X (8 ohms) for attenuation and cabinet emulation. I have it connected to a cheap Neewer mixer board allowing me to use it in stereo (with individual channel control) and mixing in audio for my computer allowing me to play along with Jam Tracks. I use a Shiit Modi 2 to connect my computer with the mixer board. I use the mixer headphone out with Sennheiser HD598Cs","title":"Attenuator setup"},{"location":"music/shows/","text":"Shows Previous school of rock shows 1968 Song Original Artist Part Ball and Chain Big brother and the holding company Rythym Guitar Sympathy for the Devil Rolling Stones Rythym Guitar On the road again Canned Heat Rythym Guitar C.C.R. V.S. The Band Song Original Artist Part Who'll stop the rain CCR Lead Guitar I heard it through the grapevine CCR Rythym Guitar Electric Light Orchestra Song Original Artist Part Strange Magic ELO Second guitar Don't bring me Down ELO Second guitar Southern Rock Song Original Artist Part La Grange ZZ Top Lead Guitar Led Zeppelin 2 V.S. 4 Song Original Artist Part Whole lotta love Zeppelin Rythym Guitar Living loving Maid Zeppelin Backup Vox Rock and Roll Zeppelin Lead Guitar Tommy Song Original Artist Part 1921 The Who Lead Guitar Cousin Kevin The Who Rythym Guitar Welcome The Who Rythym Guitar Tommy can you here me The Who Harmony Vox British Invasion Song Original Artist Part Other part Sympathy for the devil Rolling Stones Lead Guitar Lead vocals A little help from my friends Beatles Lead Guitar Lead vocals 90s Rock Song Original Artist Part Other part Sweater Song Weezer Lead Guitar Are you gonna go my way Lenny Kravitz Lead Guitar Lead Vocals Man in the box Alice in Chains Lead Guitar Lead Vocals Possum Kingdom The Toadies Rythym Guitar In Bloom Nirvana Rythym Guitar","title":"Shows"},{"location":"music/shows/#shows","text":"","title":"Shows"},{"location":"music/shows/#previous-school-of-rock-shows","text":"","title":"Previous school of rock shows"},{"location":"music/shows/#1968","text":"Song Original Artist Part Ball and Chain Big brother and the holding company Rythym Guitar Sympathy for the Devil Rolling Stones Rythym Guitar On the road again Canned Heat Rythym Guitar","title":"1968"},{"location":"music/shows/#ccr-vs-the-band","text":"Song Original Artist Part Who'll stop the rain CCR Lead Guitar I heard it through the grapevine CCR Rythym Guitar","title":"C.C.R. V.S. The Band"},{"location":"music/shows/#electric-light-orchestra","text":"Song Original Artist Part Strange Magic ELO Second guitar Don't bring me Down ELO Second guitar","title":"Electric Light Orchestra"},{"location":"music/shows/#southern-rock","text":"Song Original Artist Part La Grange ZZ Top Lead Guitar","title":"Southern Rock"},{"location":"music/shows/#led-zeppelin-2-vs-4","text":"Song Original Artist Part Whole lotta love Zeppelin Rythym Guitar Living loving Maid Zeppelin Backup Vox Rock and Roll Zeppelin Lead Guitar","title":"Led Zeppelin 2 V.S. 4"},{"location":"music/shows/#tommy","text":"Song Original Artist Part 1921 The Who Lead Guitar Cousin Kevin The Who Rythym Guitar Welcome The Who Rythym Guitar Tommy can you here me The Who Harmony Vox","title":"Tommy"},{"location":"music/shows/#british-invasion","text":"Song Original Artist Part Other part Sympathy for the devil Rolling Stones Lead Guitar Lead vocals A little help from my friends Beatles Lead Guitar Lead vocals","title":"British Invasion"},{"location":"music/shows/#90s-rock","text":"Song Original Artist Part Other part Sweater Song Weezer Lead Guitar Are you gonna go my way Lenny Kravitz Lead Guitar Lead Vocals Man in the box Alice in Chains Lead Guitar Lead Vocals Possum Kingdom The Toadies Rythym Guitar In Bloom Nirvana Rythym Guitar","title":"90s Rock"},{"location":"notes/bpftrace/","text":"BPF-trace Probe types |Type|Description| |====|===========| |Tracepoint| |usdt| |kprobe| |kretprobe| |uprobe|| |uretptrobe|| |software|| |hardware|| |watchpoint|| |profile|| |interval|| |BEGIN|| |END|| KProbe Functionality see https://www.kernel.org/doc/html/latest/trace/kprobes.html KProbe is registered KProbe makes copy of probed instrn and replaces first byte(s) of probed instrn with breakpoint instrn when cpu hits said breakpoint instr, trap occurs Executes pre-handler single-steps instrn Executes post-handler continues execution normally Note: accesses registers so can modify context, including PC kretprobe setting up trampoline Kprobe registered at entry to a fxn when probe hit, kprobe saves return address of said fxn kprobe sets up trampoline (typically a no-op) at return addr At boot time, kprobes register a kprobe @ said trampoline (boot time?, execution time?) when return instrn executed kprobe executes and calls kretprobe user-specified return handler sets saved instrn ptr to actual fxn return addr (so execution continues as normal)","title":"Bpftrace"},{"location":"notes/bpftrace/#bpf-trace","text":"","title":"BPF-trace"},{"location":"notes/bpftrace/#probe-types","text":"|Type|Description| |====|===========| |Tracepoint| |usdt| |kprobe| |kretprobe| |uprobe|| |uretptrobe|| |software|| |hardware|| |watchpoint|| |profile|| |interval|| |BEGIN|| |END||","title":"Probe types"},{"location":"notes/bpftrace/#kprobe","text":"","title":"KProbe"},{"location":"notes/bpftrace/#functionality","text":"see https://www.kernel.org/doc/html/latest/trace/kprobes.html KProbe is registered KProbe makes copy of probed instrn and replaces first byte(s) of probed instrn with breakpoint instrn when cpu hits said breakpoint instr, trap occurs Executes pre-handler single-steps instrn Executes post-handler continues execution normally Note: accesses registers so can modify context, including PC","title":"Functionality"},{"location":"notes/bpftrace/#kretprobe","text":"","title":"kretprobe"},{"location":"notes/bpftrace/#setting-up-trampoline","text":"Kprobe registered at entry to a fxn when probe hit, kprobe saves return address of said fxn kprobe sets up trampoline (typically a no-op) at return addr At boot time, kprobes register a kprobe @ said trampoline (boot time?, execution time?)","title":"setting up trampoline"},{"location":"notes/bpftrace/#when-return-instrn-executed-kprobe-executes-and","text":"calls kretprobe user-specified return handler sets saved instrn ptr to actual fxn return addr (so execution continues as normal)","title":"when return instrn executed kprobe executes and"},{"location":"notes/dpdk-ovs/","text":"DPDK-ovs recently for a research project I began on the journey of setting up DPDK-OVS on a mellanox connect x-4 nic. Their were many suprising challenges along the way and I want to document them so that anyone else doing this (and if I have to do it again) may be better informed. Sources and documentation https://dpdk.readthedocs.io/en/v17.11/nics/mlx5.html https://www.mellanox.com/related-docs/prod_software/MLNX_DPDK_Quick_Start_Guide_v16.11_1.5.pdf https://ubuntu.com/server/docs/network-dpdk Installing ovs dpdk through apt This was my original approach as the source code cannot build openvswitch-dpdk.deb thus if packages are desired to be used, then this is the only method. However, this method has a few big problems. Specifically, the DPDK in the current ubuntu repository is rather limited. DPDK in the current ubuntu repository lacks - NUMA support - mlx5 support (polling driver for mellanox nics) building OVS and dpdk from source using traditional make Originally I stopped building OVS using this method as it would not build ovs-ipsec. However this seems to be the only way to get a working DPDK. Thus somehow I must use ovs as provided by the apt repositories, whilst having it link to a self-build DPDK. which drivers? I can use the generic vfio-pci. However, I would presume that mlx_5 would perform better. But as I've said the dpdk that comes in APT doesnt ship with mlx_5 by default","title":"Dpdk ovs"},{"location":"notes/dpdk-ovs/#dpdk-ovs","text":"recently for a research project I began on the journey of setting up DPDK-OVS on a mellanox connect x-4 nic. Their were many suprising challenges along the way and I want to document them so that anyone else doing this (and if I have to do it again) may be better informed.","title":"DPDK-ovs"},{"location":"notes/dpdk-ovs/#sources-and-documentation","text":"https://dpdk.readthedocs.io/en/v17.11/nics/mlx5.html https://www.mellanox.com/related-docs/prod_software/MLNX_DPDK_Quick_Start_Guide_v16.11_1.5.pdf https://ubuntu.com/server/docs/network-dpdk","title":"Sources and documentation"},{"location":"notes/dpdk-ovs/#installing-ovs-dpdk-through-apt","text":"This was my original approach as the source code cannot build openvswitch-dpdk.deb thus if packages are desired to be used, then this is the only method. However, this method has a few big problems. Specifically, the DPDK in the current ubuntu repository is rather limited. DPDK in the current ubuntu repository lacks - NUMA support - mlx5 support (polling driver for mellanox nics)","title":"Installing ovs dpdk through apt"},{"location":"notes/dpdk-ovs/#building-ovs-and-dpdk-from-source-using-traditional-make","text":"Originally I stopped building OVS using this method as it would not build ovs-ipsec. However this seems to be the only way to get a working DPDK. Thus somehow I must use ovs as provided by the apt repositories, whilst having it link to a self-build DPDK.","title":"building OVS and dpdk from source using traditional make"},{"location":"notes/dpdk-ovs/#which-drivers","text":"I can use the generic vfio-pci. However, I would presume that mlx_5 would perform better. But as I've said the dpdk that comes in APT doesnt ship with mlx_5 by default","title":"which drivers?"},{"location":"notes/paging/","text":"Paging from some flame graphs generated by Zac Blanco","title":"Paging"},{"location":"notes/paging/#paging","text":"from some flame graphs generated by Zac Blanco","title":"Paging"},{"location":"projects/cpus/","text":"CPUs My CPU projects have been thus far designed simply to get me accustomed to learning digital design and Computer Architecture. My initial projects mostly use very low level constructs (such as gate level logic) that are great for learning but not as good for actual production code. R100 Risc-V Verilog Mostly gate level logic Non-pipelined This was my first cpu to learn simple logic design. I never tested it using full Risc-V tests rather I used smaller tests just to ensure basic functionality. R200 Partial redesign of r100 Verilog Pipelined This CPU adds pipelining. I planned on expanding it but I quickly realized the design limitations of the gate level logic used in R100.","title":"CPUs"},{"location":"projects/cpus/#cpus","text":"My CPU projects have been thus far designed simply to get me accustomed to learning digital design and Computer Architecture. My initial projects mostly use very low level constructs (such as gate level logic) that are great for learning but not as good for actual production code.","title":"CPUs"},{"location":"projects/cpus/#r100","text":"Risc-V Verilog Mostly gate level logic Non-pipelined This was my first cpu to learn simple logic design. I never tested it using full Risc-V tests rather I used smaller tests just to ensure basic functionality.","title":"R100"},{"location":"projects/cpus/#r200","text":"Partial redesign of r100 Verilog Pipelined This CPU adds pipelining. I planned on expanding it but I quickly realized the design limitations of the gate level logic used in R100.","title":"R200"},{"location":"research/research/","text":"Research I am currently researching at UC San Diego with Prof. Yiying Zhang in Wuklab . In general, I am interested in innovating computer hardware and operating systems, and all that lies in between. Research Interests Operating Systems Computer Architecture Disaggregated Systems File Systems Papers","title":"Research"},{"location":"research/research/#research","text":"I am currently researching at UC San Diego with Prof. Yiying Zhang in Wuklab . In general, I am interested in innovating computer hardware and operating systems, and all that lies in between.","title":"Research"},{"location":"research/research/#research-interests","text":"Operating Systems Computer Architecture Disaggregated Systems File Systems","title":"Research Interests"},{"location":"research/research/#papers","text":"","title":"Papers"},{"location":"selflearn/arch/","text":"Computer Architecture Here are my reccomended resources for studying computer architecture Lectures Onur Mutlu's classes Books Title Description Author Computer Archicture: A Quantitive Approach Describes advanced Computer Architecture concepts Patterson and Hennessey Computer Organization and Design RISC-V Edition A good introduction to computer ISAs Patterson and Hennesey Tools Testing Code or Assembly or A/B Testing Gnu Toolchain Qemu GDB Verilog Testing IVerilog (simple, great for starting out) Verilator Higher level RTL Spinalhdl","title":"Computer Architecture"},{"location":"selflearn/arch/#computer-architecture","text":"Here are my reccomended resources for studying computer architecture","title":"Computer Architecture"},{"location":"selflearn/arch/#lectures","text":"Onur Mutlu's classes","title":"Lectures"},{"location":"selflearn/arch/#books","text":"Title Description Author Computer Archicture: A Quantitive Approach Describes advanced Computer Architecture concepts Patterson and Hennessey Computer Organization and Design RISC-V Edition A good introduction to computer ISAs Patterson and Hennesey","title":"Books"},{"location":"selflearn/arch/#tools","text":"","title":"Tools"},{"location":"selflearn/arch/#testing-code-or-assembly-or-ab-testing","text":"Gnu Toolchain Qemu GDB","title":"Testing Code or Assembly or A/B Testing"},{"location":"selflearn/arch/#verilog-testing","text":"IVerilog (simple, great for starting out) Verilator","title":"Verilog Testing"},{"location":"selflearn/arch/#higher-level-rtl","text":"Spinalhdl","title":"Higher level RTL"},{"location":"selflearn/learn/","text":"Self Learning I learned a lot of stuff on my own. Here is how I did it :)","title":"Learn"},{"location":"selflearn/learn/#self-learning","text":"I learned a lot of stuff on my own. Here is how I did it :)","title":"Self Learning"},{"location":"selflearn/linux/","text":"Linux For linux you have to learn by doing. Using linux will give you a big edge up by giving you better access to many development tools for hardware and software. Great starting distributions Title Benefits Based on Ubuntu Popular, easy Debian Fedora Good community, also easy Red Hat Pop OS Popular, good graphics support Ubuntu/Debian The terminal I am a big fan on a simplistic user interface and frequent use of the terminal but I know this is not for everyone. However, this approach will give you a leg up on working in terminal-only environments. Learn the terminal via exposure Setup Install a simple Window Manager like i3 Install a simplistic terminal based text editor like vim Doing Do all of your tasks such as file moving, coding, program installation, et cetera from the terminal If you get confused google how to do something (also use manpages) This is how I still go about all of my daily tasks and I find it rather easy. If you know the commands well typing commands can often be easier then a GUI","title":"Linux"},{"location":"selflearn/linux/#linux","text":"For linux you have to learn by doing. Using linux will give you a big edge up by giving you better access to many development tools for hardware and software.","title":"Linux"},{"location":"selflearn/linux/#great-starting-distributions","text":"Title Benefits Based on Ubuntu Popular, easy Debian Fedora Good community, also easy Red Hat Pop OS Popular, good graphics support Ubuntu/Debian","title":"Great starting distributions"},{"location":"selflearn/linux/#the-terminal","text":"I am a big fan on a simplistic user interface and frequent use of the terminal but I know this is not for everyone. However, this approach will give you a leg up on working in terminal-only environments.","title":"The terminal"},{"location":"selflearn/linux/#learn-the-terminal-via-exposure","text":"","title":"Learn the terminal via exposure"},{"location":"selflearn/linux/#setup","text":"Install a simple Window Manager like i3 Install a simplistic terminal based text editor like vim","title":"Setup"},{"location":"selflearn/linux/#doing","text":"Do all of your tasks such as file moving, coding, program installation, et cetera from the terminal If you get confused google how to do something (also use manpages) This is how I still go about all of my daily tasks and I find it rather easy. If you know the commands well typing commands can often be easier then a GUI","title":"Doing"},{"location":"selflearn/os/","text":"Operating System Do it yourself OSDev is by and far the best resource in this aspect. I reccomend building an understanding of ISAs before beginning in this project. Which ISA to choose Many people choose x86 as their first ISA as it has extensive documentation. This is a solid choice, however, I think Risc-V offers a compelling open source option thats fairly easy to work with. Lecture Series My favorite OS lecture series are by Prof. Geoffrey Challen . The assignments, sample exams, and lectures are all available at ops-class . Working with Risc-V resources Title Description Author RISC-V OS Using Rust Good tutorial of how to work with Risc-v (in rust) Stephen Marz Xv6-RISCV Source Unix-v6 in RISC-V (also availaible in x86) See Authors on readme Xv6-RISCV Book Unix-v6 in RISC-V Book documentation Russ Cox , Frans Kaashoek , Robert Morris Learn how its already done Title Description Author The design of the Unix Operating System Great to learn historical (simple + fundamental) OS design choices Maurice J. Bach Design and Implementation of the 4.4BSD Operating System Covers transition into more modern OS design Kirk McKusick , Keith Bostic , Mike Karels , John Quarterman Design and Implementation of the FreeBSD Operating System (2nd edition) Covers more modern OS design Kirk McKusick , George V. Neville-Neil , Robert Watson Tools Gnu toolchain (cross compiler version for target ISA) GDB Qemu Gnu Make Real hardware + jtag (or swd)","title":"Operating Systems"},{"location":"selflearn/os/#operating-system","text":"","title":"Operating System"},{"location":"selflearn/os/#do-it-yourself","text":"OSDev is by and far the best resource in this aspect. I reccomend building an understanding of ISAs before beginning in this project.","title":"Do it yourself"},{"location":"selflearn/os/#which-isa-to-choose","text":"Many people choose x86 as their first ISA as it has extensive documentation. This is a solid choice, however, I think Risc-V offers a compelling open source option thats fairly easy to work with.","title":"Which ISA to choose"},{"location":"selflearn/os/#lecture-series","text":"My favorite OS lecture series are by Prof. Geoffrey Challen . The assignments, sample exams, and lectures are all available at ops-class .","title":"Lecture Series"},{"location":"selflearn/os/#working-with-risc-v-resources","text":"Title Description Author RISC-V OS Using Rust Good tutorial of how to work with Risc-v (in rust) Stephen Marz Xv6-RISCV Source Unix-v6 in RISC-V (also availaible in x86) See Authors on readme Xv6-RISCV Book Unix-v6 in RISC-V Book documentation Russ Cox , Frans Kaashoek , Robert Morris","title":"Working with Risc-V resources"},{"location":"selflearn/os/#learn-how-its-already-done","text":"Title Description Author The design of the Unix Operating System Great to learn historical (simple + fundamental) OS design choices Maurice J. Bach Design and Implementation of the 4.4BSD Operating System Covers transition into more modern OS design Kirk McKusick , Keith Bostic , Mike Karels , John Quarterman Design and Implementation of the FreeBSD Operating System (2nd edition) Covers more modern OS design Kirk McKusick , George V. Neville-Neil , Robert Watson","title":"Learn how its already done"},{"location":"selflearn/os/#tools","text":"Gnu toolchain (cross compiler version for target ISA) GDB Qemu Gnu Make Real hardware + jtag (or swd)","title":"Tools"}]}